{"google":"","tagline":"Library for easy creation Quartz jobs and triggers directly from JSON","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Quartzon","body":"### Motivation\r\nAlthough Quartz supports remote communication through RMI there is no easy way to create new jobs and triggers without using Java on the client side (for example from web browser using REST API).\r\nStill, building your own communication channel would be quite easy job if there would be any method to serialize and deserialize Quartz objects. Unlucky, there is none.\r\nQuartzon is aiming to fill this gap. It allows you to describe all your jobs and triggers using JSON.\r\nTogether with Java POJOs used for easy JSON deserialization it provides builders for automatic creation of Quartz jobs/triggers/schedulers.\r\n\r\n### Schema\r\nClasses design and naming were highly inspired by schema of JobInitializationPlugin: http://www.quartz-scheduler.org/xml/job_scheduling_data_2_0.xsd. \r\nHowever there are few differences:\r\n* dashes in names are replaced with camel case convention (i.e. jobDataMap vs job-data-map)\r\n* job-scheduling-data and pre-processing-commands elements are removed completely\r\n* processing-directives element is moved from job-scheduling-data to schedule\r\n\r\nBecause there is no very good established schema for JSON we will use xsd equivalent:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<xs:schema version=\"1.0\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\r\n\r\n  <xs:complexType name=\"processingDirectives\">\r\n    <xs:sequence>\r\n      <xs:element name=\"ignoreDuplicates\" type=\"xs:boolean\" minOccurs=\"0\"/>\r\n      <xs:element name=\"overwriteExistingData\" type=\"xs:boolean\" minOccurs=\"0\"/>\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"schedule\">\r\n    <xs:sequence>\r\n      <xs:element name=\"jobs\" type=\"jobDetail\" nillable=\"true\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\r\n      <xs:element name=\"processingDirectives\" type=\"processingDirectives\" minOccurs=\"0\"/>\r\n      <xs:element name=\"triggers\" type=\"trigger\" nillable=\"true\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"jobDetail\">\r\n    <xs:sequence>\r\n      <xs:element name=\"description\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"durability\" type=\"xs:boolean\" minOccurs=\"0\"/>\r\n      <xs:element name=\"group\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"jobClass\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"jobDataMap\" type=\"jobDataMap\" minOccurs=\"0\"/>\r\n      <xs:element name=\"name\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"recover\" type=\"xs:boolean\" minOccurs=\"0\"/>\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"jobDataMap\">\r\n    <xs:sequence>\r\n      <xs:element name=\"entry\" type=\"entry\" nillable=\"true\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"entry\">\r\n    <xs:sequence>\r\n      <xs:element name=\"key\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"value\" type=\"xs:string\" minOccurs=\"0\"/>\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"trigger\">\r\n    <xs:sequence>\r\n      <xs:element name=\"calendarInterval\" type=\"calendarIntervalTrigger\" minOccurs=\"0\"/>\r\n      <xs:element name=\"cron\" type=\"cronTrigger\" minOccurs=\"0\"/>\r\n      <xs:element name=\"simple\" type=\"simpleTrigger\" minOccurs=\"0\"/>\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"calendarIntervalTrigger\">\r\n    <xs:complexContent>\r\n      <xs:extension base=\"abstractTrigger\">\r\n        <xs:sequence>\r\n          <xs:element name=\"misfireInstruction\" type=\"xs:string\" minOccurs=\"0\"/>\r\n          <xs:element name=\"repeatInterval\" type=\"xs:int\" minOccurs=\"0\"/>\r\n          <xs:element name=\"repeatIntervalUnit\" type=\"xs:string\" minOccurs=\"0\"/>\r\n        </xs:sequence>\r\n      </xs:extension>\r\n    </xs:complexContent>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"abstractTrigger\" abstract=\"true\">\r\n    <xs:sequence>\r\n      <xs:element name=\"calendarName\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"description\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"endTime\" type=\"xs:anySimpleType\" minOccurs=\"0\"/>\r\n      <xs:element name=\"group\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"jobDataMap\" type=\"jobDataMap\" minOccurs=\"0\"/>\r\n      <xs:element name=\"jobGroup\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"jobName\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"name\" type=\"xs:string\" minOccurs=\"0\"/>\r\n      <xs:element name=\"priority\" type=\"xs:int\" minOccurs=\"0\"/>\r\n      <xs:element name=\"startTime\" type=\"xs:anySimpleType\" minOccurs=\"0\"/>\r\n      <xs:element name=\"startTimeSecondsInFuture\" type=\"xs:int\" minOccurs=\"0\"/>\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"cronTrigger\">\r\n    <xs:complexContent>\r\n      <xs:extension base=\"abstractTrigger\">\r\n        <xs:sequence>\r\n          <xs:element name=\"cronExpression\" type=\"xs:string\" minOccurs=\"0\"/>\r\n          <xs:element name=\"misfireInstruction\" type=\"xs:string\" minOccurs=\"0\"/>\r\n          <xs:element name=\"timeZone\" type=\"xs:string\" minOccurs=\"0\"/>\r\n        </xs:sequence>\r\n      </xs:extension>\r\n    </xs:complexContent>\r\n  </xs:complexType>\r\n\r\n  <xs:complexType name=\"simpleTrigger\">\r\n    <xs:complexContent>\r\n      <xs:extension base=\"abstractTrigger\">\r\n        <xs:sequence>\r\n          <xs:element name=\"misfireInstruction\" type=\"xs:string\" minOccurs=\"0\"/>\r\n          <xs:element name=\"repeatCount\" type=\"xs:int\" minOccurs=\"0\"/>\r\n          <xs:element name=\"repeatInterval\" type=\"xs:int\" minOccurs=\"0\"/>\r\n        </xs:sequence>\r\n      </xs:extension>\r\n    </xs:complexContent>\r\n  </xs:complexType>\r\n</xs:schema>\r\n``` \r\n\r\n### Usage\r\n_In progress_"}